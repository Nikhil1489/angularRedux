{"ast":null,"code":"import { decrement, increment, reset } from '../actions/counter.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nexport class CounterComponentComponent {\n  constructor(store) {\n    this.store = store;\n    this.count$ = store.select('count');\n  }\n\n  ngOnInit() {}\n\n  increment() {\n    this.store.dispatch(increment());\n  }\n\n  decrement() {\n    this.store.dispatch(decrement());\n  }\n\n  reset() {\n    this.store.dispatch(reset());\n  }\n\n}\n\nCounterComponentComponent.ɵfac = function CounterComponentComponent_Factory(t) {\n  return new (t || CounterComponentComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nCounterComponentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CounterComponentComponent,\n  selectors: [[\"app-counter-component\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[3, \"click\"]],\n  template: function CounterComponentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function CounterComponentComponent_Template_button_click_0_listener() {\n        return ctx.increment();\n      });\n      i0.ɵɵtext(1, \"Increment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function CounterComponentComponent_Template_button_click_5_listener() {\n        return ctx.decrement();\n      });\n      i0.ɵɵtext(6, \"Decrement\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function CounterComponentComponent_Template_button_click_7_listener() {\n        return ctx.reset();\n      });\n      i0.ɵɵtext(8, \"Reset Counter\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Current Count: \", i0.ɵɵpipeBind1(4, 1, ctx.count$), \"\");\n    }\n  },\n  pipes: [i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3VudGVyLWNvbXBvbmVudC5jb21wb25lbnQuc2NzcyJ9 */\"]\n});","map":{"version":3,"sources":["/home/nikhil/projects/angularRedux/src/app/counter-component/counter-component.component.ts","/home/nikhil/projects/angularRedux/src/app/counter-component/counter-component.component.html"],"names":[],"mappings":"AAGA,SAAS,SAAT,EAAoB,SAApB,EAA+B,KAA/B,QAA4C,2BAA5C;;;;AAOA,OAAM,MAAO,yBAAP,CAAgC;AAIpC,EAAA,WAAA,CAAoB,KAApB,EAAmD;AAA/B,SAAA,KAAA,GAAA,KAAA;AAClB,SAAK,MAAL,GAAc,KAAK,CAAC,MAAN,CAAa,OAAb,CAAd;AACD;;AAED,EAAA,QAAQ,GAAA,CACP;;AAGD,EAAA,SAAS,GAAA;AACP,SAAK,KAAL,CAAW,QAAX,CAAoB,SAAS,EAA7B;AACD;;AAED,EAAA,SAAS,GAAA;AACP,SAAK,KAAL,CAAW,QAAX,CAAoB,SAAS,EAA7B;AACD;;AAED,EAAA,KAAK,GAAA;AACH,SAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,EAAzB;AACD;;AAtBmC;;;mBAAzB,yB,EAAyB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,KAAA,C;AAAA,C;;;QAAzB,yB;AAAyB,EAAA,SAAA,EAAA,CAAA,CAAA,uBAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,kCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACVtC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA;AAAQ,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,0DAAA,GAAA;AAAA,eAAS,GAAA,CAAA,SAAA,EAAT;AAAoB,OAApB;AAAsB,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA;AAAS,MAAA,EAAA,CAAA,YAAA;AAEvC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AAAK,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA;;AAAmC,MAAA,EAAA,CAAA,YAAA;AAExC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA;AAAQ,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,0DAAA,GAAA;AAAA,eAAS,GAAA,CAAA,SAAA,EAAT;AAAoB,OAApB;AAAsB,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA;AAAS,MAAA,EAAA,CAAA,YAAA;AAEvC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA;AAAQ,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,0DAAA,GAAA;AAAA,eAAS,GAAA,CAAA,KAAA,EAAT;AAAgB,OAAhB;AAAkB,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,eAAA;AAAa,MAAA,EAAA,CAAA,YAAA;;;;AAJlC,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,kBAAA,CAAA,iBAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,EAAA,EAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { decrement, increment, reset } from '../actions/counter.action';\n\n@Component({\n  selector: 'app-counter-component',\n  templateUrl: './counter-component.component.html',\n  styleUrls: ['./counter-component.component.scss']\n})\nexport class CounterComponentComponent implements OnInit {\n\n  count$: Observable<number>;\n\n  constructor(private store: Store<{ count: number }>) {\n    this.count$ = store.select('count');\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  increment() {\n    this.store.dispatch(increment());\n  }\n\n  decrement() {\n    this.store.dispatch(decrement());\n  }\n\n  reset() {\n    this.store.dispatch(reset());\n  }\n\n}\n","<button (click)=\"increment()\">Increment</button>\n\n<div>Current Count: {{ count$ | async }}</div>\n\n<button (click)=\"decrement()\">Decrement</button>\n\n<button (click)=\"reset()\">Reset Counter</button>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}